services:
  flaskapp:
    build: .
    image: volodyapetrov/flaskapp
    container_name: population_app
    restart: always
    env_file:
      - .env
    environment:
      - APP_NAME=population
      - PG_USERNAME=${PG_USERNAME}
      - PG_PASSWORD=${PG_PASSWORD}
      - PG_DATABASE=${PG_DATABASE}
      - PORT=${PG_PORT}
    networks:
      private_network:
        ipv4_address: 172.16.0.3
    expose:
      - 8080
    volumes:
      - upload:/to_upload

  postgres:
    image: postgres:12.3
    container_name: population_postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: ${PG_PASSWORD}
      POSTGRES_USER: ${PG_USERNAME}
      POSTGRES_DB: ${PG_DATABASE}
    networks:
      private_network:
        ipv4_address: 172.16.0.4
    ports:
      - "5432:5432"
    volumes:
      - postgres:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: population_pgadmin
    restart: always
    user: 5050:5050
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_USER}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
      PGADMIN_LISTEN_PORT: 80
    networks:
      private_network:
        ipv4_address: 172.16.0.5
    ports:
      - 81:80
    volumes:
      - pgadmin:/var/lib/pgadmin
    depends_on:
      - postgres

  nginx:
    container_name: flask_nginx
    image: nginx:1.19
    restart: always
    networks:
      private_network:
        ipv4_address: 172.16.0.6
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - postgres
      - flaskapp
    working_dir: /app/

volumes:
  postgres:
    external: True
  pgadmin:
    external: True
  upload:
    external: True

networks:
  private_network:
    ipam:
      driver: default
      config:
        - subnet: 172.16.0.0/16
